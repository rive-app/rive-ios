name: Create a Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  determine_version:
    name: Determine the next build version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.echo_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm ci
        working-directory: ./.github/release
      - id: determine_version
        name: Get Version
        run: npm run release -- --ci --release-version | tail -n 1 > RELEASE_VERSION
        working-directory: ./.github/release
        env:
          GITHUB_TOKEN: ${{ secrets.RIVE_REPO_PAT }}
      - id: echo_version
        run: echo "::set-output name=version::$(cat ./.github/release/RELEASE_VERSION)"

  build_framework:
    name: Create RiveRuntime.xcframework
    runs-on: macos-11
    needs: [determine_version]
    outputs:
      checksum: ${{steps.get_checksum.outputs.checksum}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.RIVE_REPO_PAT }}
          submodules: recursive
      - name: Init submodule
        run: git submodule update --init
      - name: Configure Skia
        run: sh ./scripts/configure.sh
      - name: Update Marketing versions
        run: agvtool new-marketing-version ${{ needs.determine_version.outputs.version }}
      - name: Upload versionFiles
        uses: actions/upload-artifact@v3
        with:
          name: version-files
          path: |
            RiveRuntime.xcodeproj/project.pbxproj
            Source/Info.plist
            Tests/Info.plist
      - id: build_iphoneos
        name: Build release iphoneos framework
        run: sh ./scripts/build_framework.sh  -t iphoneos -c Release
      - id: build_iphonesimulator
        name: Build release iphonesimulator framework
        run: sh ./scripts/build_framework.sh  -t iphonesimulator -c Release
      - id: merge_frameworks
        if: steps.build_iphoneos.conclusion == 'success' && steps.build_iphonesimulator.conclusion == 'success'
        name: Merge created frameworks
        run: sh ./scripts/merge_frameworks.sh -c Release
      - id: zip 
        name: Zip the framework 
        run: zip -r RiveRuntime.xcframework.zip RiveRuntime.xcframework
        working-directory: ./archive
      - id: get_checksum
        name: Add the checksum of the zip file into our environment
        run: echo "::set-output name=checksum::$(swift package compute-checksum archive/RiveRuntime.xcframework.zip)"
      - name: Upload xcFramework
        uses: actions/upload-artifact@v3
        with:
          name: RiveRuntime.xcframework.zip
          path: archive/RiveRuntime.xcframework.zip
      - name: Upload versionFiles
        uses: actions/upload-artifact@v3
        with:
          name: version-files
          path: |
            Source/Info.plist
            Tests/Info.plist

  do_release:
    name: Do the actual release
    runs-on: ubuntu-latest
    needs: [determine_version, build_framework]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: npm ci
        working-directory: ./.github/release

      - id: read_package_template
        uses: pCYSl5EDgo/cat@master
        with:
          path: .github/workflows/Package.swift.template
      - name: Create Package.swift
        run: |
          cat > Package.swift <<-EOF
          ${{ steps.read_package_template.outputs.text }}
          EOF
        env:
          CHECKSUM: ${{ needs.build_framework.outputs.checksum }}
          RELEASE_VERSION: ${{ needs.determine_version.outputs.version }}

      - id: read_podspec_template
        uses: pCYSl5EDgo/cat@master
        with:
          path: .github/workflows/RiveRuntime.podspec.template
      - name: Create RiveRuntime.podspec
        run: |
          cat > RiveRuntime.podspec <<-EOF
          ${{ steps.read_podspec_template.outputs.text }}
          EOF
        env:
          RELEASE_VERSION: ${{ needs.determine_version.outputs.version }}
      - name: Upload podspec file
        uses: actions/upload-artifact@v2
        with:
          name: RiveRuntime.podspec
          path: RiveRuntime.podspec

      - name: Git config
        run: |
          git config --local user.email 'hello@rive.app'
          git config --local user.name ${{ github.actor }}
      - name: Download versionFiles
        uses: actions/download-artifact@v3
        with:
          name: version-files
      - name: Add & commit version files (might want to look into doing this in release-it)
        run: git add RiveRuntime.podspec Package.swift Source/Info.plist Tests/Info.plist && git commit -m "Updating version files"
      - name: Download framework artifact
        uses: actions/download-artifact@v2
        with:
          name: RiveRuntime.xcframework.zip
          path: archive/
      - name: Bump version number, update changelog, push and tag
        run: npm run release -- --ci
        working-directory: ./.github/release
        env:
          GITHUB_TOKEN: ${{ secrets.RIVE_REPO_PAT }}

  publish_cocoapods:
    name: Publish framework to cocoapods
    runs-on: macos-11
    needs: [determine_version, build_framework, do_release]
    steps:
      - name: Download framework artifact
        uses: actions/download-artifact@v3
        with:
          name: RiveRuntime.xcframework.zip
      - name: Download podspec file
        uses: actions/download-artifact@v3
        with:
          name: RiveRuntime.podspec
      - name: Extract archive to pass cocoapods validation
        run: unzip RiveRuntime.xcframework.zip
      - name: Publish pod to the CocoaPods
        uses: michaelhenry/deploy-to-cocoapods-github-action@1.0.10
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
